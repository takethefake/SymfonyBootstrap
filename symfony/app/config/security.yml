security:
  encoders:
    Schulzcodes\UserBundle\Entity\User:
      algorithm: bcrypt
      cost: 13

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN

  providers:
    user_provider:
      id: platform.user.provider


  firewalls:
    dev:
      pattern:  ^/(_(profiler|wdt)|css|images|js)/
      security: false
    test:
      pattern: ^/test.php$
      security: false
    login:
      pattern:  ^/demo/secured/login$
      security: false

    oauth_token:
      pattern:    ^/oauth/v2/token
      security:   false

    #secured_area:
    #  pattern:    ^/demo/secured/
    #  form_login:
    #    provider: user_provider
    #    check_path: schulzcodes_oauth_server_auth_login
    #    login_path: schulzcodes_oauth_server_auth_login
    #  logout:
    #    path:   _demo_logout
    #    target: _demo
      #anonymous: ~
      #http_basic:
      # realm: "Secured Demo Area"

    oauth_authorize:
      pattern:    ^/oauth/v2/auth
      form_login:
        provider: user_provider
        check_path: schulzcodes_oauth_server_auth_login
        login_path: schulzcodes_oauth_server_auth_login
      anonymous: true

    api:
      pattern:    ^/api
      fos_oauth:  true
      stateless:  true

  access_control:
    # You can omit this if /api can be accessed both authenticated and anonymously
    - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
    #- { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
    #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }